//=============================================================================
//
// ライト処理 [light.cpp]
// Author : 
//
//=============================================================================
#include "light.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MAX_LIGHT			(3)

//*****************************************************************************
// グローバル変数
//*****************************************************************************
D3DLIGHT9 g_light[MAX_LIGHT];

//=============================================================================
// ライトの初期化処理
//=============================================================================
void InitLight(void)
{
	LPDIRECT3DDEVICE9 pDevice = GetDevice();	// デバイスの取得
	D3DXVECTOR3 vecDir[MAX_LIGHT];
	int nCount;
	//int nCount2;

	for (nCount = 0; nCount < MAX_LIGHT; nCount++)
	{
		// ライトをクリアする
		ZeroMemory(&g_light[nCount], sizeof(D3DLIGHT9));
	
		// ライトの種類を設定
		g_light[nCount].Type = D3DLIGHT_DIRECTIONAL;

	}
		// ライトの拡散光を設定	 ライトの方向の設定
		//ライト１
		g_light[0].Diffuse = D3DXCOLOR(0.5f, 0.5f, 0.5f, 0.5f);
		vecDir[0] = D3DXVECTOR3(0.2f, -0.8f, -0.4f);

		//ライト１
		g_light[1].Diffuse = D3DXCOLOR(0.5f, 0.5f, 0.5f, 0.5f);
		vecDir[1] = D3DXVECTOR3(0.0f, -0.8f, 0.4f);

		//ライト１
		g_light[2].Diffuse = D3DXCOLOR(0.3f, 0.3f, 0.3f, 0.3f);
		vecDir[2] = D3DXVECTOR3(-0.2f, -0.8f, 0.4f);
		
		
		
		

	for (nCount = 0; nCount < MAX_LIGHT; nCount++)
	{

		D3DXVec3Normalize(&vecDir[nCount], &vecDir[nCount]);		//
		g_light[nCount].Direction = vecDir[nCount];					//
		// ライトを設定する
		pDevice->SetLight(nCount, &g_light[nCount]);
		// ライトを有効にする
		pDevice->LightEnable(nCount, TRUE);
	}
	

}

//=============================================================================
// ライトの終了処理
//=============================================================================
void UninitLight(void)
{
}

//=============================================================================
// ライトの更新処理
//=============================================================================
void UpdateLight(void)
{
}

